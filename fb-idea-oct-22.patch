Index: src/impl/org/twodividedbyzero/idea/findbugs/core/FindBugsPluginImpl.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/core/FindBugsPluginImpl.java	(revision 115)
+++ src/impl/org/twodividedbyzero/idea/findbugs/core/FindBugsPluginImpl.java	(revision )
@@ -188,7 +188,7 @@
 		final ContentFactory contentFactory = ContentFactory.SERVICE.getInstance();
 
 		final JComponent toolWindowPanel = new ToolWindowPanel(_project, _toolWindow);
-		final Content content = contentFactory.createContent(toolWindowPanel, "Found Bugs View", false);
+		final Content content = contentFactory.createContent(toolWindowPanel, "Analysis Results", false);
 		//final Content content1 = contentFactory.createContent(toolWindowPanel, "Found Bugs View", false);
 		//final Content content1 = contentFactory.createContent(_contentPanel1, "Bug Details", false);
 		//final JComponent toolWindowPanel1 = new ToolWindowPanel(_project, _toolWindow);
@@ -444,7 +444,7 @@
 			final Map<String, String> detectors = state.getDetectors();
 			_preferences.setDetectors(detectors);
 			for (final Entry<String, String> entry : detectors.entrySet()) {
-				final DetectorFactory detectorFactory = FindBugsPreferences.getDetectorFactorCollection().getFactory(entry.getKey());
+				final DetectorFactory detectorFactory = FindBugsPreferences.getDetectorFactoryCollection().getFactory(entry.getKey());
 				if (detectorFactory != null) {
 					_preferences.getUserPreferences().enableDetector(detectorFactory, Boolean.valueOf(entry.getValue()));
 				}
Index: FindBugs-IDEA.iml
===================================================================
--- FindBugs-IDEA.iml	(revision 115)
+++ FindBugs-IDEA.iml	(revision )
@@ -10,6 +10,7 @@
       <sourceFolder url="file://$MODULE_DIR$/src/dev" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/impl" isTestSource="false" />
       <sourceFolder url="file://$MODULE_DIR$/src/test" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/cloud-lib" isTestSource="false" packagePrefix="cloud-lib" />
       <excludeFolder url="file://$MODULE_DIR$/target" />
     </content>
     <orderEntry type="inheritedJdk" />
@@ -17,20 +18,66 @@
     <orderEntry type="module-library">
       <library>
         <CLASSES>
-          <root url="file://$MODULE_DIR$/lib" />
+          <root url="jar://$MODULE_DIR$/lib/findbugs-full-2.0.0-dev-20101022.jar!/" />
         </CLASSES>
         <JAVADOC />
-        <SOURCES>
-          <root url="file://$MODULE_DIR$/../findbugs-1.3.9/src/junit" />
-          <root url="file://$MODULE_DIR$/../findbugs-1.3.9/src/java" />
-          <root url="file://$MODULE_DIR$/../findbugs-1.3.9/src/java5" />
-          <root url="file://$MODULE_DIR$/../findbugs-1.3.9/src/infonodeJava" />
-          <root url="file://$MODULE_DIR$/../findbugs-1.3.9/src/antTask" />
-          <root url="file://$MODULE_DIR$/../findbugs-1.3.9/src/tools" />
-        </SOURCES>
-        <jarDirectory url="file://$MODULE_DIR$/lib" recursive="false" />
+        <SOURCES />
       </library>
     </orderEntry>
+    <orderEntry type="module-library">
+      <library>
+        <CLASSES>
+          <root url="jar://$MODULE_DIR$/lib/webCloudClient.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+    <orderEntry type="module-library">
+      <library>
+        <CLASSES>
+          <root url="jar://$MODULE_DIR$/lib/jdepend-2.9.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+    <orderEntry type="module-library">
+      <library>
+        <CLASSES>
+          <root url="jar://$MODULE_DIR$/lib/swing-worker-1.2.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+    <orderEntry type="module-library">
+      <library>
+        <CLASSES>
+          <root url="jar://$MODULE_DIR$/lib/TableLayout-bin-jdk1.5-2009-06-10.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+    <orderEntry type="module-library">
+      <library>
+        <CLASSES>
+          <root url="jar://$MODULE_DIR$/lib/annotations.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+    <orderEntry type="module-library">
+      <library>
+        <CLASSES>
+          <root url="jar://$MODULE_DIR$/lib/guava-r06.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
   </component>
   <component name="copyright">
     <Base>
@@ -50,6 +97,7 @@
     <option name="_detectors">
       <map>
         <entry key="AppendingToAnObjectOutputStream" value="true" />
+        <entry key="AtomicityProblem" value="true" />
         <entry key="BCPMethodReturnCheck" value="false" />
         <entry key="BadAppletConstructor" value="false" />
         <entry key="BadResultSetAccess" value="true" />
@@ -140,6 +188,7 @@
         <entry key="InheritanceUnsafeGetResource" value="true" />
         <entry key="InitializationChain" value="true" />
         <entry key="InstantiateStaticClass" value="true" />
+        <entry key="IntCast2LongAsInstant" value="true" />
         <entry key="InvalidJUnitTest" value="true" />
         <entry key="IteratorIdioms" value="true" />
         <entry key="LazyInit" value="true" />
@@ -189,7 +238,9 @@
         <entry key="TestASM" value="false" />
         <entry key="TestDataflowAnalysis" value="false" />
         <entry key="TestingGround" value="false" />
+        <entry key="TestingGround2" value="false" />
         <entry key="TrainFieldStoreTypes" value="true" />
+        <entry key="TrainLongInstantfParams" value="true" />
         <entry key="TrainNonNullAnnotations" value="true" />
         <entry key="TrainUnconditionalDerefParams" value="true" />
         <entry key="URLProblems" value="true" />
Index: src/impl/org/twodividedbyzero/idea/findbugs/resources/GuiResources.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/resources/GuiResources.java	(revision 117)
+++ src/impl/org/twodividedbyzero/idea/findbugs/resources/GuiResources.java	(revision )
@@ -58,14 +58,28 @@
 	public static final Icon GROUP_BY_CATEGORY_ICON = ResourcesLoader.loadIcon("actions/groupByBugCategory.png");
 	public static final Icon GROUP_BY_CLASS_ICON = ResourcesLoader.loadIcon("actions/groupByClass.png");
 	public static final Icon GROUP_BY_RANK_ICON = ResourcesLoader.loadIcon("actions/groupByRank.png");
+	public static final Icon GROUP_BY_PRIORITY_ICON = ResourcesLoader.loadIcon("actions/groupByPriority.png");
 	public static final Icon GROUP_BY_PACKAGE_ICON = ResourcesLoader.loadIcon("actions/groupByPackage.png");
 
-	private static final Icon GROUP_BY_PRIORITY_HIGH_ICON = ResourcesLoader.loadIcon("priority/priorityHigh.png");
-	private static final Icon GROUP_BY_PRIORITY_MEDIUM_ICON = ResourcesLoader.loadIcon("priority/priorityMedium.png");
-	private static final Icon GROUP_BY_PRIORITY_LOW_ICON = ResourcesLoader.loadIcon("priority/priorityLow.png");
+	public static final Icon GROUP_BY_RANK_SCARIEST_ICON = ResourcesLoader.loadIcon("priority/rankScariest.png");
+	public static final Icon GROUP_BY_RANK_SCARY_ICON = ResourcesLoader.loadIcon("priority/rankScary.png");
+	public static final Icon GROUP_BY_RANK_TROUBLING_ICON = ResourcesLoader.loadIcon("priority/rankTroubling.png");
+	public static final Icon GROUP_BY_RANK_OF_CONCERN_ICON = ResourcesLoader.loadIcon("priority/rankOfConcern.png");
+	public static final Map<String, Icon> GROUP_BY_RANK_ICONS = new HashMap<String, Icon>(4);
+
+	static {
+		GROUP_BY_RANK_ICONS.put("SCARIEST", GROUP_BY_RANK_SCARIEST_ICON);
+		GROUP_BY_RANK_ICONS.put("SCARY", GROUP_BY_RANK_SCARY_ICON);
+		GROUP_BY_RANK_ICONS.put("TROUBLING", GROUP_BY_RANK_TROUBLING_ICON);
+		GROUP_BY_RANK_ICONS.put("OF_CONCERN", GROUP_BY_RANK_OF_CONCERN_ICON);
+	}
+
+	public static final Icon GROUP_BY_PRIORITY_HIGH_ICON = ResourcesLoader.loadIcon("priority/priorityHigh.png");
+	public static final Icon GROUP_BY_PRIORITY_MEDIUM_ICON = ResourcesLoader.loadIcon("priority/priorityMedium.png");
+	public static final Icon GROUP_BY_PRIORITY_LOW_ICON = ResourcesLoader.loadIcon("priority/priorityLow.png");
 	public static final Icon GROUP_BY_PRIORITY_EXP_ICON = ResourcesLoader.loadIcon("priority/priorityExp.png");
-	private static final Icon GROUP_BY_PRIORITY_IGNORE_ICON = ResourcesLoader.loadIcon("priority/priorityIgnore.png");
-	public static final Map<String, Icon> GROUP_BY_PRIORITY_ICONS = new HashMap<String, Icon>(3);
+	public static final Icon GROUP_BY_PRIORITY_IGNORE_ICON = ResourcesLoader.loadIcon("priority/priorityIgnore.png");
+	public static final Map<String, Icon> GROUP_BY_PRIORITY_ICONS = new HashMap<String, Icon>(5);
 
 
 	static {
Index: src/impl/org/twodividedbyzero/idea/findbugs/report/BugReporter.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/report/BugReporter.java	(revision 113)
+++ src/impl/org/twodividedbyzero/idea/findbugs/report/BugReporter.java	(revision )
@@ -36,6 +36,7 @@
 import org.twodividedbyzero.idea.findbugs.common.event.types.BugReporterInspectionEventImpl;
 import org.twodividedbyzero.idea.findbugs.common.ui.EventDispatchThreadHelper;
 import org.twodividedbyzero.idea.findbugs.common.util.IdeaUtilImpl;
+import org.twodividedbyzero.idea.findbugs.core.FindBugsPlugin;
 import org.twodividedbyzero.idea.findbugs.core.FindBugsPluginImpl;
 import org.twodividedbyzero.idea.findbugs.preferences.FindBugsPreferences;
 import org.twodividedbyzero.idea.findbugs.tasks.FindBugsTask;
@@ -86,17 +87,18 @@
 	 *
 	 * @param project the project whose classes are being analyzed for bugs
 	 */
-	public BugReporter(final Project project) {
-		this(project, false);
+	public BugReporter(final Project project, SortedBugCollection bugCollection) {
+		this(project, false, bugCollection);
 	}
 
 
-	public BugReporter(final Project project, final boolean isInspectionRun) {
+	public BugReporter(final Project project, final boolean isInspectionRun, SortedBugCollection bugCollection) {
 		//this.monitor = monitor;
 		_project = project;
-		_preferences = IdeaUtilImpl.getPluginComponent(project).getPreferences();
+        FindBugsPlugin pluginComponent = IdeaUtilImpl.getPluginComponent(project);
+        _preferences = pluginComponent.getPreferences();
 		_isInspectionRun = isInspectionRun;
-		_bugCollection = new SortedBugCollection();
+		_bugCollection = bugCollection;
 	}
 
 
Index: src/impl/org/twodividedbyzero/idea/findbugs/core/FindBugsWorker.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/core/FindBugsWorker.java	(revision 115)
+++ src/impl/org/twodividedbyzero/idea/findbugs/core/FindBugsWorker.java	(revision )
@@ -30,7 +30,7 @@
 import edu.umd.cs.findbugs.DetectorFactoryCollection;
 import edu.umd.cs.findbugs.FindBugs2;
 import edu.umd.cs.findbugs.IFindBugsEngine;
-import edu.umd.cs.findbugs.IFindBugsEngine2;
+import edu.umd.cs.findbugs.SortedBugCollection;
 import edu.umd.cs.findbugs.config.ProjectFilterSettings;
 import edu.umd.cs.findbugs.config.UserPreferences;
 import org.dom4j.DocumentException;
@@ -43,6 +43,7 @@
 import org.twodividedbyzero.idea.findbugs.common.ui.EventDispatchThreadHelper;
 import org.twodividedbyzero.idea.findbugs.common.ui.EventDispatchThreadHelper.OperationAdapter;
 import org.twodividedbyzero.idea.findbugs.common.util.IdeaUtilImpl;
+import org.twodividedbyzero.idea.findbugs.gui.PluginGuiCallback;
 import org.twodividedbyzero.idea.findbugs.preferences.AnalysisEffort;
 import org.twodividedbyzero.idea.findbugs.preferences.FindBugsPreferences;
 import org.twodividedbyzero.idea.findbugs.report.BugReporter;
@@ -82,7 +83,8 @@
 	private CompilerManager _compilerManager;
 	private final boolean _startInBackground;
 	private Module _module;
+    protected SortedBugCollection _bugCollection;
-	//private RecurseCollectorTask _collectorTask;
+    //private RecurseCollectorTask _collectorTask;
 
 
 	public FindBugsWorker(final com.intellij.openapi.project.Project project) {
@@ -140,6 +142,11 @@
 		_findBugsProject = new FindBugsProject();
 		_findBugsProject.setProjectName(_project.getName());
 
+        _bugCollection = new SortedBugCollection();
+        FindBugsPlugin pluginComponent = IdeaUtilImpl.getPluginComponent(_project);
+        _bugCollection.getProject().setGuiCallback(new PluginGuiCallback(pluginComponent));
+        _bugCollection.setDoNotUseCloud(true);
+
 		//CompilerManager.getInstance(_project).addCompilationStatusListener(this);
 
 		//initCollectorTask(_findBugsProject);
@@ -173,10 +180,11 @@
 	public boolean work() {
 		try {
 			registerEventListner();
-			final IFindBugsEngine2 engine = createFindBugsEngine();
+			final IFindBugsEngine engine = createFindBugsEngine();
 
 			// Create FindBugsTask
-			final FindBugsTask findBugsTask = new FindBugsTask(_project, "Running FindBugs analysis...", true, engine, _startInBackground);
+			final FindBugsTask findBugsTask = new FindBugsTask(_project, _bugCollection,
+                                                               "Running FindBugs analysis...", true, engine, _startInBackground);  // NON-NLS
 			_bugReporter.setFindBugsTask(findBugsTask);
 			queue(findBugsTask);
 
@@ -230,16 +238,16 @@
 	}
 
 
-	protected IFindBugsEngine2 createFindBugsEngine() {
+	protected IFindBugsEngine createFindBugsEngine() {
 		// Create BugReporter
-		_bugReporter = new BugReporter(_project);
+		_bugReporter = new BugReporter(_project, _bugCollection);
 
 		//final ProjectFilterSettings projectFilterSettings = _userPrefs.getFilterSettings();
 		_bugReporter.setPriorityThreshold(_userPrefs.getUserDetectorThreshold());
 		//_bugReporter.setPriorityThreshold(projectFilterSettings.getMinPriorityAsInt());
 
 		// Create IFindBugsEngine
-		final IFindBugsEngine2 engine = new FindBugs2();
+		final IFindBugsEngine engine = new FindBugs2();
 		engine.setNoClassOk(true);
 		engine.setMergeSimilarWarnings(false);
 		engine.setBugReporter(_bugReporter);
@@ -252,7 +260,7 @@
 
 
 		// add plugins to detector collection
-		final DetectorFactoryCollection factoryCollection = FindBugsPreferences.getDetectorFactorCollection();
+		final DetectorFactoryCollection factoryCollection = FindBugsPreferences.getDetectorFactoryCollection();
 		engine.setDetectorFactoryCollection(factoryCollection);
 
 		//engine.excludeBaselineBugs(_userPrefs.getExcludeBugsFiles());
Index: src/impl/org/twodividedbyzero/idea/findbugs/inspection/FindBugsInspector.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/inspection/FindBugsInspector.java	(revision 115)
+++ src/impl/org/twodividedbyzero/idea/findbugs/inspection/FindBugsInspector.java	(revision )
@@ -20,7 +20,7 @@
 import com.intellij.openapi.compiler.CompileTask;
 import edu.umd.cs.findbugs.DetectorFactoryCollection;
 import edu.umd.cs.findbugs.FindBugs2;
-import edu.umd.cs.findbugs.IFindBugsEngine2;
+import edu.umd.cs.findbugs.IFindBugsEngine;
 import org.twodividedbyzero.idea.findbugs.core.FindBugsWorker;
 import org.twodividedbyzero.idea.findbugs.preferences.FindBugsPreferences;
 import org.twodividedbyzero.idea.findbugs.report.BugReporter;
@@ -60,9 +60,9 @@
 	public boolean work() {
 		try {
 			_inspection.registerEventListener();
-			final IFindBugsEngine2 engine = createFindBugsEngine();
+			final IFindBugsEngine engine = createFindBugsEngine();
 			// Create FindBugsTask
-			final FindBugsTask findBugsTask = new FindBugsTask(_project, "Runnig FindBugs inspection...", true, engine, true);
+			final FindBugsTask findBugsTask = new FindBugsTask(_project, _bugCollection, "Running FindBugs inspection...", true, engine, true);
 			_bugReporter.setFindBugsTask(findBugsTask);
 			findBugsTask.runFindBugs(engine);
 			return true;
@@ -91,22 +91,22 @@
 
 
 	@Override
-	protected IFindBugsEngine2 createFindBugsEngine() {
+	protected IFindBugsEngine createFindBugsEngine() {
 		//TODO: FindBugs.setHome(FindBugsPlugin.getFindBugsEnginePluginLocation());
 
 		// Create BugReporter
-		_bugReporter = new BugReporter(_project, true);
+		_bugReporter = new BugReporter(_project, true, _bugCollection);
 		_bugReporter.setPriorityThreshold(_userPrefs.getUserDetectorThreshold());
 
 		// Create IFindBugsEngine
-		final IFindBugsEngine2 engine = new FindBugs2();
+		final IFindBugsEngine engine = new FindBugs2();
 		engine.setNoClassOk(true);
 		engine.setBugReporter(_bugReporter);
 		engine.setProject(_findBugsProject);
 		engine.setProgressCallback(_bugReporter);
 
 		// add plugins to detector collection
-		final DetectorFactoryCollection dfc = FindBugsPreferences.getDetectorFactorCollection();
+		final DetectorFactoryCollection dfc = FindBugsPreferences.getDetectorFactoryCollection();
 		engine.setDetectorFactoryCollection(dfc);
 
 		// configure detectors.
Index: src/impl/org/twodividedbyzero/idea/findbugs/gui/toolwindow/view/CloudCommentsPane.form
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/gui/toolwindow/view/CloudCommentsPane.form	(revision )
+++ src/impl/org/twodividedbyzero/idea/findbugs/gui/toolwindow/view/CloudCommentsPane.form	(revision )
@@ -0,0 +1,195 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="org.twodividedbyzero.idea.findbugs.gui.toolwindow.view.CloudCommentsPane">
+  <grid id="27dc6" binding="_mainPanel" layout-manager="GridBagLayout">
+    <constraints>
+      <xy x="20" y="20" width="377" height="285"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <vspacer id="4cae6">
+        <constraints>
+          <grid row="6" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="1" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+          <gridbag weightx="0.0" weighty="0.0"/>
+        </constraints>
+      </vspacer>
+      <component id="cc21b" class="com.intellij.ui.components.labels.LinkLabel" binding="_addCommentLink">
+        <constraints>
+          <grid row="5" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="1" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+          <gridbag weightx="0.0" weighty="0.0" ipadx="5" ipady="5"/>
+        </constraints>
+        <properties>
+          <text value="Add Comment"/>
+        </properties>
+      </component>
+      <grid id="1119e" binding="_commentEntryPanel" layout-manager="GridBagLayout">
+        <constraints>
+          <grid row="3" column="0" row-span="2" col-span="1" vsize-policy="3" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+          <gridbag top="5" left="5" bottom="5" right="5" weightx="1.0" weighty="0.0"/>
+        </constraints>
+        <properties/>
+        <border type="empty">
+          <size top="5" left="5" bottom="5" right="5"/>
+        </border>
+        <children>
+          <component id="96159" class="javax.swing.JButton" binding="_submitCommentButton">
+            <constraints>
+              <grid row="1" column="3" row-span="1" col-span="1" vsize-policy="0" hsize-policy="3" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+              <gridbag top="5" left="5" bottom="5" right="5" weightx="0.0" weighty="0.0"/>
+            </constraints>
+            <properties>
+              <text value="Submit"/>
+            </properties>
+          </component>
+          <component id="27ff3" class="javax.swing.JComboBox" binding="_classificationCombo">
+            <constraints>
+              <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="2" anchor="8" fill="1" indent="0" use-parent-layout="false"/>
+              <gridbag top="5" left="5" bottom="5" right="5" weightx="0.0" weighty="0.0"/>
+            </constraints>
+            <properties>
+              <model>
+                <item value="Unclassified"/>
+                <item value="Not a bug"/>
+                <item value="Etc"/>
+              </model>
+            </properties>
+          </component>
+          <component id="be848" class="javax.swing.JLabel">
+            <constraints>
+              <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+              <gridbag weightx="0.0" weighty="0.0"/>
+            </constraints>
+            <properties>
+              <labelFor value="27ff3"/>
+              <text value="Classification:"/>
+            </properties>
+          </component>
+          <scrollpane id="c66c7">
+            <constraints>
+              <grid row="0" column="0" row-span="1" col-span="4" vsize-policy="7" hsize-policy="7" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+              <gridbag weightx="1.0" weighty="0.0"/>
+            </constraints>
+            <properties/>
+            <border type="etched">
+              <color color="-16777216"/>
+            </border>
+            <children>
+              <component id="a0fd8" class="javax.swing.JTextArea" binding="_commentBox">
+                <constraints/>
+                <properties>
+                  <rows value="5"/>
+                  <text value="My comment"/>
+                </properties>
+              </component>
+            </children>
+          </scrollpane>
+          <component id="cfa15" class="com.intellij.ui.components.labels.LinkLabel" binding="_cancelLink">
+            <constraints>
+              <grid row="2" column="3" row-span="1" col-span="1" vsize-policy="1" hsize-policy="1" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+              <gridbag weightx="0.0" weighty="0.0"/>
+            </constraints>
+            <properties>
+              <text value="cancel"/>
+            </properties>
+          </component>
+          <hspacer id="c511a">
+            <constraints>
+              <grid row="1" column="2" row-span="1" col-span="1" vsize-policy="1" hsize-policy="6" anchor="0" fill="1" indent="0" use-parent-layout="false"/>
+              <gridbag weightx="1.0" weighty="0.0"/>
+            </constraints>
+          </hspacer>
+        </children>
+      </grid>
+      <scrollpane id="f96d4" binding="_cloudReportScrollPane">
+        <constraints>
+          <grid row="2" column="0" row-span="1" col-span="1" vsize-policy="7" hsize-policy="7" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+          <gridbag top="5" left="5" bottom="5" right="5" weightx="1.0" weighty="1.0"/>
+        </constraints>
+        <properties/>
+        <border type="line"/>
+        <children>
+          <component id="92b79" class="javax.swing.JEditorPane" binding="_cloudReportPane">
+            <constraints/>
+            <properties>
+              <contentType value="text/html"/>
+              <editable value="false"/>
+              <text value="&lt;html&gt;&#13;&#10;  &lt;head&gt;&#13;&#10;    &#13;&#10;  &lt;/head&gt;&#13;&#10;  &lt;body&gt;&#13;&#10;  &lt;/body&gt;&#13;&#10;&lt;/html&gt;&#13;&#10;"/>
+            </properties>
+          </component>
+        </children>
+      </scrollpane>
+      <grid id="a5cbd" layout-manager="GridBagLayout">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+          <gridbag weightx="1.0" weighty="0.0"/>
+        </constraints>
+        <properties>
+          <background color="-3355444"/>
+        </properties>
+        <border type="line">
+          <color color="-16751002"/>
+        </border>
+        <children>
+          <component id="5b239" class="javax.swing.JLabel" binding="_titleLabel">
+            <constraints>
+              <grid row="0" column="0" row-span="2" col-span="1" vsize-policy="0" hsize-policy="0" anchor="9" fill="0" indent="0" use-parent-layout="false"/>
+              <gridbag weightx="1.0" weighty="0.0"/>
+            </constraints>
+            <properties>
+              <font size="14" style="1"/>
+              <foreground color="-16777216"/>
+              <text value="FindBugs Cloud - signed in"/>
+            </properties>
+          </component>
+          <component id="ebd63" class="com.intellij.ui.components.labels.LinkLabel" binding="_signInOutLink">
+            <constraints>
+              <grid row="0" column="1" row-span="1" col-span="1" vsize-policy="1" hsize-policy="1" anchor="9" fill="0" indent="0" use-parent-layout="false"/>
+              <gridbag weightx="0.0" weighty="0.0"/>
+            </constraints>
+            <properties>
+              <text value="sign out"/>
+            </properties>
+          </component>
+        </children>
+      </grid>
+      <grid id="a3aad" layout-manager="GridBagLayout">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+          <gridbag top="5" left="5" bottom="5" right="5" weightx="1.0" weighty="0.0"/>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children>
+          <component id="9b3a5" class="com.intellij.ui.components.labels.LinkLabel" binding="_changeLink">
+            <constraints>
+              <grid row="0" column="1" row-span="1" col-span="1" vsize-policy="1" hsize-policy="1" anchor="4" fill="0" indent="0" use-parent-layout="false"/>
+              <gridbag weightx="0.0" weighty="0.0"/>
+            </constraints>
+            <properties>
+              <text value="change"/>
+              <toolTipText value="Choose where comments are stored"/>
+            </properties>
+          </component>
+          <component id="494a4" class="javax.swing.JTextArea" binding="_cloudDetailsLabel">
+            <constraints>
+              <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+              <gridbag weightx="1.0" weighty="1.0"/>
+            </constraints>
+            <properties>
+              <editable value="false"/>
+              <font size="10" style="2"/>
+              <foreground color="-10066330"/>
+              <lineWrap value="true"/>
+              <maximumSize width="100" height="50"/>
+              <minimumSize width="50" height="16"/>
+              <opaque value="false"/>
+              <preferredSize width="100" height="31"/>
+              <text value="Comments are stored on the FindBugs Cloud at http://findbugs-cloud.appspot.com"/>
+              <wrapStyleWord value="true"/>
+            </properties>
+          </component>
+        </children>
+      </grid>
+    </children>
+  </grid>
+</form>
Index: src/impl/org/twodividedbyzero/idea/findbugs/gui/preferences/DetectorConfiguration.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/gui/preferences/DetectorConfiguration.java	(revision 113)
+++ src/impl/org/twodividedbyzero/idea/findbugs/gui/preferences/DetectorConfiguration.java	(revision )
@@ -273,7 +273,7 @@
 		}*/
 
 		for (final Entry<String, String> entry : _preferences.getDetectors().entrySet()) {
-			final DetectorFactory factory = FindBugsPreferences.getDetectorFactorCollection().getFactory(entry.getKey());
+			final DetectorFactory factory = FindBugsPreferences.getDetectorFactoryCollection().getFactory(entry.getKey());
 			if (factory != null) {
 				// Only configure non-hidden factories
 				if (factory.isHidden() && !getHiddenCheckBox().isSelected()) {
Index: src/impl/org/twodividedbyzero/idea/findbugs/gui/toolwindow/view/ToolWindowPanel.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/gui/toolwindow/view/ToolWindowPanel.java	(revision 117)
+++ src/impl/org/twodividedbyzero/idea/findbugs/gui/toolwindow/view/ToolWindowPanel.java	(revision )
@@ -69,7 +69,7 @@
 
 	private static final Logger LOGGER = Logger.getInstance(ToolWindowPanel.class.getName());
 
-	private static final String DEFAULT_LAYOUT_DEF = "(ROW (LEAF name=left weight=0.4) (COLUMN weight=0.6 right.top right.bottom) wight=0.6)";
+	private static final String DEFAULT_LAYOUT_DEF = "(ROW (LEAF name=left weight=0.3) (COLUMN weight=0.3 right.top right.bottom) (LEAF name=right weight=0.4))";
 	private static final String PREVIEW_LAYOUT_DEF = "(ROW (LEAF name=left weight=0.3) (LEAF name=middle weight=0.4) (COLUMN weight=0.3 right.top right.bottom))";
 	//private static final String PREVIEW_LAYOUT_DEF = "(ROW (LEAF name=left weight=0.4) (COLUMN weight=0.6 right.top right.bottom)  (LEAF name=right))";
 
@@ -167,6 +167,7 @@
 					getMultiSplitPane().add(getBugTreePanel(), "left");
 					getMultiSplitPane().add(getBugDetailsComponents().getBugDetailsPanel(), "right.top");
 					getMultiSplitPane().add(getBugDetailsComponents().getBugExplanationPanel(), "right.bottom");
+					getMultiSplitPane().add(_bugDetailsComponents.getCloudCommentsPanel(), "right");
 
 					if (getPreviewPanel().getEditor() != null) {
 						resizeSplitNodes(ToolWindowPanel.this);
Index: src/impl/org/twodividedbyzero/idea/findbugs/core/ModuleComponentImpl.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/core/ModuleComponentImpl.java	(revision 117)
+++ src/impl/org/twodividedbyzero/idea/findbugs/core/ModuleComponentImpl.java	(revision )
@@ -237,7 +237,7 @@
 			final Map<String, String> detectors = state.getDetectors();
 			_preferences.setDetectors(detectors);
 			for (final Entry<String, String> entry : detectors.entrySet()) {
-				final DetectorFactory detectorFactory = FindBugsPreferences.getDetectorFactorCollection().getFactory(entry.getKey());
+				final DetectorFactory detectorFactory = FindBugsPreferences.getDetectorFactoryCollection().getFactory(entry.getKey());
 				if (detectorFactory != null) {
 					_preferences.getUserPreferences().enableDetector(detectorFactory, Boolean.valueOf(entry.getValue()));
 				}
Index: FindBugs-IDEA.ipr
===================================================================
--- FindBugs-IDEA.ipr	(revision 115)
+++ FindBugs-IDEA.ipr	(revision )
@@ -461,6 +461,63 @@
     <option name="PROJECT_PROFILE" />
     <option name="USE_PROJECT_LEVEL_SETTINGS" value="false" />
   </component>
+  <component name="CodeStyleSettingsManager">
+    <option name="PER_PROJECT_SETTINGS">
+      <value>
+        <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="99" />
+        <option name="NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND" value="99" />
+        <option name="PACKAGES_TO_USE_IMPORT_ON_DEMAND">
+          <value />
+        </option>
+        <ADDITIONAL_INDENT_OPTIONS fileType="java">
+          <option name="INDENT_SIZE" value="4" />
+          <option name="CONTINUATION_INDENT_SIZE" value="8" />
+          <option name="TAB_SIZE" value="4" />
+          <option name="USE_TAB_CHARACTER" value="true" />
+          <option name="SMART_TABS" value="false" />
+          <option name="LABEL_INDENT_SIZE" value="0" />
+          <option name="LABEL_INDENT_ABSOLUTE" value="false" />
+        </ADDITIONAL_INDENT_OPTIONS>
+        <ADDITIONAL_INDENT_OPTIONS fileType="js">
+          <option name="INDENT_SIZE" value="4" />
+          <option name="CONTINUATION_INDENT_SIZE" value="8" />
+          <option name="TAB_SIZE" value="4" />
+          <option name="USE_TAB_CHARACTER" value="false" />
+          <option name="SMART_TABS" value="false" />
+          <option name="LABEL_INDENT_SIZE" value="0" />
+          <option name="LABEL_INDENT_ABSOLUTE" value="false" />
+        </ADDITIONAL_INDENT_OPTIONS>
+        <ADDITIONAL_INDENT_OPTIONS fileType="jsp">
+          <option name="INDENT_SIZE" value="4" />
+          <option name="CONTINUATION_INDENT_SIZE" value="8" />
+          <option name="TAB_SIZE" value="4" />
+          <option name="USE_TAB_CHARACTER" value="false" />
+          <option name="SMART_TABS" value="false" />
+          <option name="LABEL_INDENT_SIZE" value="0" />
+          <option name="LABEL_INDENT_ABSOLUTE" value="false" />
+        </ADDITIONAL_INDENT_OPTIONS>
+        <ADDITIONAL_INDENT_OPTIONS fileType="xml">
+          <option name="INDENT_SIZE" value="4" />
+          <option name="CONTINUATION_INDENT_SIZE" value="8" />
+          <option name="TAB_SIZE" value="4" />
+          <option name="USE_TAB_CHARACTER" value="false" />
+          <option name="SMART_TABS" value="false" />
+          <option name="LABEL_INDENT_SIZE" value="0" />
+          <option name="LABEL_INDENT_ABSOLUTE" value="false" />
+        </ADDITIONAL_INDENT_OPTIONS>
+        <ADDITIONAL_INDENT_OPTIONS fileType="yml">
+          <option name="INDENT_SIZE" value="2" />
+          <option name="CONTINUATION_INDENT_SIZE" value="8" />
+          <option name="TAB_SIZE" value="4" />
+          <option name="USE_TAB_CHARACTER" value="false" />
+          <option name="SMART_TABS" value="false" />
+          <option name="LABEL_INDENT_SIZE" value="0" />
+          <option name="LABEL_INDENT_ABSOLUTE" value="false" />
+        </ADDITIONAL_INDENT_OPTIONS>
+      </value>
+    </option>
+    <option name="USE_PER_PROJECT_SETTINGS" value="true" />
+  </component>
   <component name="CompilerConfiguration">
     <option name="DEFAULT_COMPILER" value="Javac" />
     <resourceExtensions>
@@ -477,6 +534,7 @@
       <entry name="?*.html" />
       <entry name="?*.dtd" />
       <entry name="?*.tld" />
+      <entry name="?*.jar" />
     </wildcardResourcePatterns>
     <annotationProcessing enabled="false" useClasspath="true" />
   </component>
@@ -971,6 +1029,7 @@
         <inspection_tool class="ExtendsThread" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="ExtendsUtilityClass" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="ExternalizableWithSerializationMethods" enabled="false" level="WARNING" enabled_by_default="false" />
+        <inspection_tool class="FaceletsDetectingInspection" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="FacesModelInspection" enabled="true" level="ERROR" enabled_by_default="true" />
         <inspection_tool class="FallthroughInSwitchStatementJS" enabled="true" level="WARNING" enabled_by_default="true" />
         <inspection_tool class="FallthruInSwitchStatement" enabled="false" level="WARNING" enabled_by_default="false" />
@@ -1003,9 +1062,12 @@
         <inspection_tool class="FinalMethodInFinalClass" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="FinalPrivateMethod" enabled="true" level="WARNING" enabled_by_default="true" />
         <inspection_tool class="FinalStaticMethod" enabled="true" level="WARNING" enabled_by_default="true" />
-        <inspection_tool class="Finalize" enabled="false" level="WARNING" enabled_by_default="false" />
+        <inspection_tool class="Finalize" enabled="false" level="WARNING" enabled_by_default="false">
+          <option name="ignoreTrivialFinalizers" value="true" />
+        </inspection_tool>
         <inspection_tool class="FinalizeCallsSuperFinalize" enabled="true" level="WARNING" enabled_by_default="true">
-          <option name="m_ignoreForObjectSubclasses" value="false" />
+          <option name="ignoreObjectSubclasses" value="false" />
+          <option name="ignoreTrivialFinalizers" value="true" />
         </inspection_tool>
         <inspection_tool class="FinalizeNotProtected" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="FinallyBlockCannotCompleteNormally" enabled="true" level="WARNING" enabled_by_default="true" />
@@ -1285,7 +1347,9 @@
           </option>
           <option name="myCustomValuesEnabled" value="true" />
         </inspection_tool>
-        <inspection_tool class="IOResource" enabled="true" level="WARNING" enabled_by_default="true" />
+        <inspection_tool class="IOResource" enabled="true" level="WARNING" enabled_by_default="true">
+          <option name="ignoredTypesString" value="java.io.ByteArrayOutputStream,java.io.ByteArrayInputStream,java.io.StringBufferInputStream,java.io.CharArrayWriter,java.io.CharArrayReader,java.io.StringWriter,java.io.StringReader" />
+        </inspection_tool>
         <inspection_tool class="IfMayBeConditional" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="IfStatementWithIdenticalBranches" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="IfStatementWithIdenticalBranchesJS" enabled="false" level="WARNING" enabled_by_default="false" />
@@ -1397,6 +1461,7 @@
         <inspection_tool class="JSUnresolvedVariable" enabled="true" level="INFO" enabled_by_default="true" />
         <inspection_tool class="JSUntypedDeclaration" enabled="true" level="WARNING" enabled_by_default="true" />
         <inspection_tool class="JSUnusedLocalSymbols" enabled="true" level="WARNING" enabled_by_default="true" />
+        <inspection_tool class="JSValidateJSON" enabled="false" level="ERROR" enabled_by_default="false" />
         <inspection_tool class="JSValidateTypes" enabled="false" level="INFO" enabled_by_default="false" />
         <inspection_tool class="JUnit4AnnotatedMethodInJUnit3TestCase" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="JUnitAbstractTestClassNamingConvention" enabled="true" level="WARNING" enabled_by_default="true">
@@ -1528,11 +1593,13 @@
         <inspection_tool class="MalformedFormatString" enabled="true" level="WARNING" enabled_by_default="true" />
         <inspection_tool class="MalformedRegex" enabled="true" level="WARNING" enabled_by_default="true" />
         <inspection_tool class="MalformedXPath" enabled="true" level="WARNING" enabled_by_default="true" />
+        <inspection_tool class="ManagedBeanClassInspection" enabled="false" level="ERROR" enabled_by_default="false" />
         <inspection_tool class="ManagedBeanInconsistencyInspection" enabled="false" level="ERROR" enabled_by_default="false" />
         <inspection_tool class="ManualArrayCopy" enabled="true" level="WARNING" enabled_by_default="true" />
         <inspection_tool class="ManualArrayToCollectionCopy" enabled="true" level="WARNING" enabled_by_default="true" />
         <inspection_tool class="MapReplaceableByEnumMap" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="MarkerInterface" enabled="false" level="WARNING" enabled_by_default="false" />
+        <inspection_tool class="MavenModelInspection" enabled="false" level="ERROR" enabled_by_default="false" />
         <inspection_tool class="MethodCallInLoopCondition" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="MethodCount" enabled="false" level="WARNING" enabled_by_default="false">
           <option name="m_limit" value="20" />
@@ -1687,6 +1754,7 @@
           <option name="REPORT_ANNOTATION_NOT_PROPAGATED_TO_OVERRIDERS" value="true" />
         </inspection_tool>
         <inspection_tool class="NumberEquality" enabled="true" level="WARNING" enabled_by_default="true" />
+        <inspection_tool class="NumericOverflow" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="NumericToString" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="ObjectAllocationIgnoredJS" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="ObjectAllocationInLoop" enabled="false" level="WARNING" enabled_by_default="false" />
@@ -1699,7 +1767,7 @@
         <inspection_tool class="ObjectNotify" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="ObjectToString" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="ObsoleteCollection" enabled="false" level="WARNING" enabled_by_default="false">
-          <option name="ignoreLibraryArguments" value="false" />
+          <option name="ignoreRequiredObsoleteCollectionTypes" value="false" />
         </inspection_tool>
         <inspection_tool class="OctalAndDecimalIntegersMixed" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="OctalIntegerJS" enabled="false" level="WARNING" enabled_by_default="false" />
@@ -1799,6 +1867,7 @@
         <inspection_tool class="PhpUnimplementedMethodsInspection" enabled="false" level="ERROR" enabled_by_default="false" />
         <inspection_tool class="PlatformDetectionJS" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="Plugin.xmlValidity" enabled="true" level="ERROR" enabled_by_default="true" />
+        <inspection_tool class="PluginXmlValidity" enabled="false" level="ERROR" enabled_by_default="false" />
         <inspection_tool class="PointlessArithmeticExpression" enabled="true" level="WARNING" enabled_by_default="true">
           <option name="m_ignoreExpressionsContainingConstants" value="false" />
         </inspection_tool>
@@ -1833,6 +1902,16 @@
         <inspection_tool class="PublicMethodNotExposedInInterface" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="PublicStaticArrayField" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="PublicStaticCollectionField" enabled="false" level="WARNING" enabled_by_default="false" />
+        <inspection_tool class="PyArgumentListInspection" enabled="false" level="WARNING" enabled_by_default="false" />
+        <inspection_tool class="PyMethodFirstArgAssignmentInspection" enabled="false" level="WARNING" enabled_by_default="false" />
+        <inspection_tool class="PyMethodOverridingInspection" enabled="false" level="WARNING" enabled_by_default="false" />
+        <inspection_tool class="PyMethodParametersInspection" enabled="false" level="INFO" enabled_by_default="false" />
+        <inspection_tool class="PyRedeclarationInspection" enabled="false" level="WARNING" enabled_by_default="false" />
+        <inspection_tool class="PyReturnFromInitInspection" enabled="false" level="WARNING" enabled_by_default="false" />
+        <inspection_tool class="PyStringFormatInspection" enabled="false" level="WARNING" enabled_by_default="false" />
+        <inspection_tool class="PyTrailingSemicolonInspection" enabled="false" level="WARNING" enabled_by_default="false" />
+        <inspection_tool class="PyUnreachableCodeInspection" enabled="false" level="WARNING" enabled_by_default="false" />
+        <inspection_tool class="PyUnresolvedReferencesInspection" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="QuestionableName" enabled="false" level="WARNING" enabled_by_default="false">
           <option name="nameString" value="aa,abc,bad,bar,bar2,baz,baz1,baz2,baz3,bb,blah,bogus,bool,cc,dd,defau1t,dummy,dummy2,ee,fa1se,ff,foo,foo1,foo2,foo3,foobar,four,fred,fred1,fred2,gg,hh,hello,hello1,hello2,hello3,ii,nu11,one,silly,silly2,string,two,that,then,three,whi1e,var" />
         </inspection_tool>
@@ -1949,10 +2028,7 @@
         <inspection_tool class="SimplifiableConditionalExpression" enabled="true" level="WARNING" enabled_by_default="true" />
         <inspection_tool class="SimplifiableIfStatement" enabled="true" level="WARNING" enabled_by_default="true" />
         <inspection_tool class="SimplifiableJUnitAssertion" enabled="false" level="WARNING" enabled_by_default="false" />
-        <inspection_tool class="Since15" enabled="false" level="ERROR" enabled_by_default="false">
-          <option name="FORBID_15_API" value="true" />
-          <option name="FORBID_16_API" value="true" />
-        </inspection_tool>
+        <inspection_tool class="Since15" enabled="false" level="ERROR" enabled_by_default="false" />
         <inspection_tool class="SingleCharacterStartsWith" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="SingleClassImport" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="Singleton" enabled="false" level="WARNING" enabled_by_default="false" />
@@ -2134,6 +2210,7 @@
           <option name="m_allowConstructorAsInitializer" value="false" />
           <option name="m_onlyLookAtBlocks" value="false" />
         </inspection_tool>
+        <inspection_tool class="TrailingSpacesInProperty" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="TransientFieldInNonSerializableClass" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="TransientFieldNotInitialized" enabled="false" level="WARNING" enabled_by_default="false" />
         <inspection_tool class="TrivialConditionalJS" enabled="true" level="WARNING" enabled_by_default="true" />
@@ -2273,7 +2350,6 @@
             </value>
           </option>
           <option name="ADD_EJB_TO_ENTRIES" value="true" />
-          <option name="ADD_TESTNG_TO_ENTRIES" value="true" />
           <option name="ADD_JUNIT_TO_ENTRIES" value="true" />
         </inspection_tool>
         <inspection_tool class="UnusedImport" enabled="false" level="WARNING" enabled_by_default="false" />
@@ -2409,7 +2485,9 @@
           <option name="nonNlsCommentPattern" value="NON-NLS" />
         </inspection_tool>
         <inspection_tool class="HibernateResource" enabled="true" level="WARNING" enabled_by_default="true" />
-        <inspection_tool class="IOResource" enabled="true" level="WARNING" enabled_by_default="true" />
+        <inspection_tool class="IOResource" enabled="true" level="WARNING" enabled_by_default="true">
+          <option name="ignoredTypesString" value="java.io.ByteArrayOutputStream,java.io.ByteArrayInputStream,java.io.StringBufferInputStream,java.io.CharArrayWriter,java.io.CharArrayReader,java.io.StringWriter,java.io.StringReader" />
+        </inspection_tool>
         <inspection_tool class="IncrementDecrementUsedAsExpression" enabled="true" level="WARNING" enabled_by_default="true" />
         <inspection_tool class="IndexOfReplaceableByContains" enabled="true" level="WARNING" enabled_by_default="true" />
         <inspection_tool class="InstanceofIncompatibleInterface" enabled="true" level="WARNING" enabled_by_default="true" />
@@ -2447,10 +2525,6 @@
         </inspection_tool>
         <inspection_tool class="LiteralAsArgToStringEquals" enabled="true" level="WARNING" enabled_by_default="true" />
         <inspection_tool class="LoadLibraryWithNonConstantString" enabled="true" level="WARNING" enabled_by_default="true" />
-        <inspection_tool class="LocalCanBeFinal" enabled="true" level="WARNING" enabled_by_default="true">
-          <option name="REPORT_VARIABLES" value="true" />
-          <option name="REPORT_PARAMETERS" value="true" />
-        </inspection_tool>
         <inspection_tool class="LocalVariableNameWithMistakes" enabled="false" level="INFO" enabled_by_default="false" />
         <inspection_tool class="MethodMayBeStatic" enabled="true" level="WARNING" enabled_by_default="true">
           <option name="m_onlyPrivateOrFinal" value="false" />
@@ -2503,15 +2577,6 @@
         <inspection_tool class="SystemOutErr" enabled="true" level="WARNING" enabled_by_default="true" />
         <inspection_tool class="TestMethodWithoutAssertion" enabled="true" level="WARNING" enabled_by_default="true" />
         <inspection_tool class="ThrowablePrintStackTrace" enabled="true" level="WARNING" enabled_by_default="true" />
-        <inspection_tool class="TypeMayBeWeakened" enabled="true" level="WARNING" enabled_by_default="true">
-          <option name="useRighthandTypeAsWeakestTypeInAssignments" value="true" />
-          <option name="useParameterizedTypeForCollectionMethods" value="true" />
-          <option name="doNotWeakenToJavaLangObject" value="true" />
-        </inspection_tool>
-        <inspection_tool class="UnusedCatchParameter" enabled="true" level="WARNING" enabled_by_default="true">
-          <option name="m_ignoreCatchBlocksWithComments" value="false" />
-          <option name="m_ignoreTestCases" value="false" />
-        </inspection_tool>
         <inspection_tool class="UnusedCatchParameterJS" enabled="true" level="WARNING" enabled_by_default="true">
           <option name="m_ignoreCatchBlocksWithComments" value="false" />
         </inspection_tool>
@@ -2672,6 +2737,11 @@
         <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
       </item>
     </group>
+    <group name="IntelliJ">
+      <item class="com.intellij.ui.components.labels.LinkLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="true" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="1" anchor="0" fill="0" />
+      </item>
+    </group>
   </component>
   <component name="ProjectDetails">
     <option name="projectName" value="FindBugs-IDEA" />
@@ -2705,7 +2775,7 @@
       <module fileurl="file://$PROJECT_DIR$/FindBugs-IDEA.iml" filepath="$PROJECT_DIR$/FindBugs-IDEA.iml" />
     </modules>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_5" assert-keyword="true" jdk-15="true" project-jdk-name="IDEA-9" project-jdk-type="IDEA JDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_5" assert-keyword="true" jdk-15="true" project-jdk-name="IDEA 8.1.4" project-jdk-type="IDEA JDK">
     <output url="file://$PROJECT_DIR$/target/impl" />
   </component>
   <component name="ResourceManagerContainer">
@@ -2790,6 +2860,11 @@
       <map>
         <entry key="property.analysisEffortLevel" value="max" />
         <entry key="property.analyzeAfterCompile" value="false" />
+        <entry key="property.exportAsHtml" value="true" />
+        <entry key="property.exportAsXml" value="true" />
+        <entry key="property.exportBaseDir" value="" />
+        <entry key="property.exportCreateArchiveDir" value="false" />
+        <entry key="property.exportOpenBrowser" value="true" />
         <entry key="property.minPriorityToReport" value="Low" />
         <entry key="property.runAnalysisInBackground" value="true" />
         <entry key="property.showHiddenDetectors" value="false" />
@@ -2799,6 +2874,7 @@
     <option name="_detectors">
       <map>
         <entry key="AppendingToAnObjectOutputStream" value="true" />
+        <entry key="AtomicityProblem" value="true" />
         <entry key="BCPMethodReturnCheck" value="false" />
         <entry key="BadAppletConstructor" value="false" />
         <entry key="BadResultSetAccess" value="true" />
@@ -2889,6 +2965,7 @@
         <entry key="InheritanceUnsafeGetResource" value="true" />
         <entry key="InitializationChain" value="true" />
         <entry key="InstantiateStaticClass" value="true" />
+        <entry key="IntCast2LongAsInstant" value="true" />
         <entry key="InvalidJUnitTest" value="true" />
         <entry key="IteratorIdioms" value="true" />
         <entry key="LazyInit" value="true" />
@@ -2938,7 +3015,9 @@
         <entry key="TestASM" value="false" />
         <entry key="TestDataflowAnalysis" value="false" />
         <entry key="TestingGround" value="false" />
+        <entry key="TestingGround2" value="false" />
         <entry key="TrainFieldStoreTypes" value="true" />
+        <entry key="TrainLongInstantfParams" value="true" />
         <entry key="TrainNonNullAnnotations" value="true" />
         <entry key="TrainUnconditionalDerefParams" value="true" />
         <entry key="URLProblems" value="true" />
@@ -2969,5 +3048,10 @@
       </map>
     </option>
   </component>
+  <component name="uidesigner-configuration">
+    <option name="INSTRUMENT_CLASSES" value="false" />
+    <option name="COPY_FORMS_RUNTIME_TO_OUTPUT" value="false" />
+    <option name="DEFAULT_LAYOUT_MANAGER" value="GridBagLayout" />
+  </component>
 </project>
 
Index: src/impl/org/twodividedbyzero/idea/findbugs/gui/toolwindow/view/CloudCommentsPane.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/gui/toolwindow/view/CloudCommentsPane.java	(revision )
+++ src/impl/org/twodividedbyzero/idea/findbugs/gui/toolwindow/view/CloudCommentsPane.java	(revision )
@@ -0,0 +1,463 @@
+/*
+ * Copyright 2010 Andre Pfeiler
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *  http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.twodividedbyzero.idea.findbugs.gui.toolwindow.view;
+
+import com.intellij.openapi.diagnostic.Logger;
+import com.intellij.openapi.ui.Messages;
+import com.intellij.openapi.ui.popup.JBPopupFactory;
+import com.intellij.openapi.ui.popup.ListPopup;
+import com.intellij.openapi.ui.popup.PopupStep;
+import com.intellij.openapi.ui.popup.util.BaseListPopupStep;
+import com.intellij.ui.components.labels.LinkLabel;
+import com.intellij.ui.components.labels.LinkListener;
+import edu.umd.cs.findbugs.BugInstance;
+import edu.umd.cs.findbugs.I18N;
+import edu.umd.cs.findbugs.SortedBugCollection;
+import edu.umd.cs.findbugs.cloud.Cloud;
+import edu.umd.cs.findbugs.cloud.Cloud.UserDesignation;
+import edu.umd.cs.findbugs.cloud.CloudFactory;
+import edu.umd.cs.findbugs.cloud.CloudPlugin;
+import sun.swing.SwingUtilities2;
+
+import javax.swing.BorderFactory;
+import javax.swing.DefaultComboBoxModel;
+import javax.swing.JButton;
+import javax.swing.JComboBox;
+import javax.swing.JComponent;
+import javax.swing.JEditorPane;
+import javax.swing.JLabel;
+import javax.swing.JPanel;
+import javax.swing.JScrollPane;
+import javax.swing.JTextArea;
+import javax.swing.text.BadLocationException;
+import javax.swing.text.html.HTMLDocument;
+import java.awt.BorderLayout;
+import java.awt.Color;
+import java.awt.Dimension;
+import java.awt.Font;
+import java.awt.GridBagConstraints;
+import java.awt.GridBagLayout;
+import java.awt.Insets;
+import java.awt.RenderingHints;
+import java.awt.event.ActionEvent;
+import java.awt.event.ActionListener;
+import java.util.ArrayList;
+import java.util.List;
+
+public class CloudCommentsPane extends JPanel {
+	private static final Logger LOGGER = Logger.getInstance(CloudCommentsPane.class.getName());
+
+	private JEditorPane _cloudReportPane;
+	private LinkLabel _addCommentLink;
+	private JTextArea _commentBox;
+	private JButton _submitCommentButton;
+	private JPanel _commentEntryPanel;
+	private JComboBox _classificationCombo;
+	private JPanel _mainPanel;
+	private LinkLabel _cancelLink;
+	private JScrollPane _cloudReportScrollPane;
+	private JLabel _titleLabel;
+	private LinkLabel _signInOutLink;
+	private LinkLabel _changeLink;
+	private JTextArea _cloudDetailsLabel;
+	private SortedBugCollection _bugCollection;
+	private BugInstance _bugInstance;
+
+	private Cloud.CloudStatusListener cloudStatusListener = new Cloud.CloudStatusListener() {
+		public void handleIssueDataDownloadedEvent() {
+		}
+
+		public void handleStateChange(Cloud.SigninState oldState, Cloud.SigninState state) {
+			updateBugCommentsView();
+		}
+	};
+	private final ToolWindowPanel _toolWindowPanel;
+
+	public CloudCommentsPane(ToolWindowPanel toolWindowPanel) {
+		_toolWindowPanel = toolWindowPanel;
+		setLayout(new BorderLayout());
+		this.add(_mainPanel, BorderLayout.CENTER);
+
+		_classificationCombo.removeAllItems();
+		for (UserDesignation designation : UserDesignation.values()) {
+			_classificationCombo.addItem(I18N.instance().getUserDesignation(designation.name()));
+		}
+
+		_commentEntryPanel.setVisible(false);
+		_addCommentLink.setListener(new LinkListener() {
+			public void linkSelected(LinkLabel linkLabel, Object o) {
+				_commentEntryPanel.setVisible(true);
+				_addCommentLink.setVisible(false);
+				_commentBox.requestFocus();
+				_commentBox.setSelectionStart(0);
+				_commentBox.setSelectionEnd(_commentBox.getText().length());
+				CloudCommentsPane.this.invalidate();
+			}
+		}, null);
+		_cancelLink.setListener(new LinkListener() {
+			public void linkSelected(LinkLabel linkLabel, Object o) {
+				_commentEntryPanel.setVisible(false);
+				_addCommentLink.setVisible(true);
+				CloudCommentsPane.this.invalidate();
+			}
+		}, null);
+		_submitCommentButton.addActionListener(new ActionListener() {
+			public void actionPerformed(ActionEvent e) {
+				String comment = _commentBox.getText();
+				int index = _classificationCombo.getSelectedIndex();
+				UserDesignation choice;
+				if (index == -1)
+					choice = UserDesignation.UNCLASSIFIED;
+				else
+					choice = UserDesignation.values()[index];
+				_bugInstance.setUserDesignationKey(choice.name(), _bugCollection);
+				_bugInstance.setAnnotationText(comment, _bugCollection);
+
+				_commentBox.setText("My comment");
+
+				updateBugCommentsView();
+
+				_commentEntryPanel.setVisible(false);
+				_addCommentLink.setVisible(true);
+				CloudCommentsPane.this.invalidate();
+			}
+		});
+		_signInOutLink.setListener(new LinkListener() {
+			public void linkSelected(LinkLabel linkLabel, Object o) {
+				if (_bugCollection != null) {
+					Cloud cloud = _bugCollection.getCloud();
+					switch (cloud.getSigninState()) {
+						case SIGNED_OUT:
+						case SIGNIN_FAILED:
+						case UNAUTHENTICATED:
+							try {
+								cloud.signIn();
+							} catch (Exception e) {
+								Messages.showErrorDialog("The FindBugs Cloud could not be contacted at this time.\n\n"
+										+ e.getMessage(), "Could not connect to FindBugs Cloud");
+								LOGGER.warn(e);
+							}
+							break;
+						case SIGNED_IN:
+							cloud.signOut();
+							break;
+					}
+				}
+			}
+		}, null);
+		_changeLink.setListener(new LinkListener() {
+			public void linkSelected(LinkLabel linkLabel, Object o) {
+				final List<CloudPlugin> plugins = new ArrayList<CloudPlugin>();
+				final List<String> descriptions = new ArrayList<String>();
+				for (CloudPlugin plugin : CloudFactory.getRegisteredClouds().values()) {
+					if (!plugin.isHidden()) {
+						descriptions.add(plugin.getDescription());
+						plugins.add(plugin);
+					}
+				}
+				JBPopupFactory factory = JBPopupFactory.getInstance();
+				ListPopup popup = factory.createListPopup(new BaseListPopupStep<String>("Store comments in:", descriptions) {
+					@Override
+					public PopupStep<?> onChosen(String selectedValue, boolean finalChoice) {
+						if (selectedValue != null) {
+							int index = descriptions.indexOf(selectedValue);
+							if (index == -1) {
+								LOGGER.error("Error - not found - '" + selectedValue + "' among " + descriptions);
+							} else {
+								CloudPlugin newPlugin = plugins.get(index);
+								String newCloudId = newPlugin.getId();
+								String oldCloudId = _bugCollection.getCloud().getPlugin().getId();
+								if (!oldCloudId.equals(newCloudId)) {
+									_bugCollection.getProject().setCloudId(newCloudId);
+									//TODO: execute in background so signin doesn't stall UI
+									_bugCollection.reinitializeCloud();
+									_toolWindowPanel.getBugDetailsComponents().issueUpdated(_bugInstance);
+								}
+							}
+						}
+						return super.onChosen(selectedValue, finalChoice);
+					}
+
+					@Override
+					public void canceled() {
+						super.canceled();
+					}
+				});
+				popup.showInCenterOf(_changeLink);
+			}
+		}, null);
+		_cloudDetailsLabel.setBackground(null);
+		_cloudDetailsLabel.setBorder(null);
+		_titleLabel.putClientProperty(SwingUtilities2.AA_TEXT_PROPERTY_KEY, new SwingUtilities2.AATextInfo(RenderingHints.VALUE_TEXT_ANTIALIAS_ON, null));
+		_cloudDetailsLabel.putClientProperty(SwingUtilities2.AA_TEXT_PROPERTY_KEY, new SwingUtilities2.AATextInfo(RenderingHints.VALUE_TEXT_ANTIALIAS_ON, null));
+		updateBugCommentsView();
+	}
+
+	public void setBugInstance(SortedBugCollection bugCollection, BugInstance bugInstance) {
+		updateCloudListeners(bugCollection);
+		this._bugCollection = bugCollection;
+		this._bugInstance = bugInstance;
+		updateBugCommentsView();
+	}
+
+	private void updateCloudListeners(SortedBugCollection newBugCollection) {
+		boolean isNewCloud = false;
+		Cloud newCloud = newBugCollection.getCloud();
+		if (_bugCollection != null) {
+			Cloud oldCloud = _bugCollection.getCloud();
+			//noinspection ObjectEquality
+			if (oldCloud != newCloud) {
+				isNewCloud = true;
+				if (oldCloud != null) {
+					oldCloud.removeStatusListener(cloudStatusListener);
+				}
+			}
+		} else {
+			isNewCloud = true;
+		}
+		if (isNewCloud && newCloud != null) {
+			newCloud.addStatusListener(cloudStatusListener);
+		}
+	}
+
+	private void updateBugCommentsView() {
+		if (_bugCollection == null) {
+			_signInOutLink.setVisible(false);
+			_changeLink.setVisible(false);
+			_cloudDetailsLabel.setText("");
+			_titleLabel.setText("<html>FindBugs Cloud");
+			return;
+		}
+		_changeLink.setVisible(true);
+		HTMLDocument doc = (HTMLDocument) _cloudReportPane.getDocument();
+		Cloud cloud = _bugCollection.getCloud();
+		try {
+			doc.remove(0, doc.getLength());
+			doc.insertString(0, cloud.getCloudReport(_bugInstance), null);
+		} catch (BadLocationException e) {
+			// probably won't happen
+		}
+		CloudPlugin plugin = cloud.getPlugin();
+		_cloudDetailsLabel.setText(plugin.getDetails());
+		Cloud.SigninState state = cloud.getSigninState();
+		String stateStr = state == Cloud.SigninState.NO_SIGNIN_REQUIRED ? "" : state + " - ";
+		String userStr = cloud.getUser() == null ? "" : cloud.getUser();
+		_titleLabel.setText("<html><b>Comments - " + plugin.getDescription() + "</b>"
+				+ "<br><font style='font-size: x-small;color:darkgray'>" + stateStr + userStr);
+		switch (state) {
+			case NO_SIGNIN_REQUIRED:
+			case SIGNING_IN:
+				_signInOutLink.setVisible(false);
+				break;
+			case SIGNED_OUT:
+			case SIGNIN_FAILED:
+			case UNAUTHENTICATED:
+				_signInOutLink.setText("sign in");
+				_signInOutLink.setVisible(true);
+				break;
+			case SIGNED_IN:
+				_signInOutLink.setText("sign out");
+				_signInOutLink.setVisible(true);
+				break;
+		}
+	}
+
+	{
+// GUI initializer generated by IntelliJ IDEA GUI Designer
+// >>> IMPORTANT!! <<<
+// DO NOT EDIT OR ADD ANY CODE HERE!
+		$$$setupUI$$$();
+	}
+
+	/**
+	 * Method generated by IntelliJ IDEA GUI Designer
+	 * >>> IMPORTANT!! <<<
+	 * DO NOT edit this method OR call it in your code!
+	 *
+	 * @noinspection ALL
+	 */
+	private void $$$setupUI$$$() {
+		_mainPanel = new JPanel();
+		_mainPanel.setLayout(new GridBagLayout());
+		final JPanel spacer1 = new JPanel();
+		GridBagConstraints gbc;
+		gbc = new GridBagConstraints();
+		gbc.gridx = 0;
+		gbc.gridy = 6;
+		gbc.fill = GridBagConstraints.BOTH;
+		_mainPanel.add(spacer1, gbc);
+		_addCommentLink = new LinkLabel();
+		_addCommentLink.setText("Add Comment");
+		gbc = new GridBagConstraints();
+		gbc.gridx = 0;
+		gbc.gridy = 5;
+		gbc.anchor = GridBagConstraints.WEST;
+		gbc.ipadx = 5;
+		gbc.ipady = 5;
+		_mainPanel.add(_addCommentLink, gbc);
+		_commentEntryPanel = new JPanel();
+		_commentEntryPanel.setLayout(new GridBagLayout());
+		gbc = new GridBagConstraints();
+		gbc.gridx = 0;
+		gbc.gridy = 3;
+		gbc.gridheight = 2;
+		gbc.weightx = 1.0;
+		gbc.fill = GridBagConstraints.BOTH;
+		gbc.insets = new Insets(5, 5, 5, 5);
+		_mainPanel.add(_commentEntryPanel, gbc);
+		_commentEntryPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5), null));
+		_submitCommentButton = new JButton();
+		_submitCommentButton.setText("Submit");
+		gbc = new GridBagConstraints();
+		gbc.gridx = 3;
+		gbc.gridy = 1;
+		gbc.insets = new Insets(5, 5, 5, 5);
+		_commentEntryPanel.add(_submitCommentButton, gbc);
+		_classificationCombo = new JComboBox();
+		final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
+		defaultComboBoxModel1.addElement("Unclassified");
+		defaultComboBoxModel1.addElement("Not a bug");
+		defaultComboBoxModel1.addElement("Etc");
+		_classificationCombo.setModel(defaultComboBoxModel1);
+		gbc = new GridBagConstraints();
+		gbc.gridx = 1;
+		gbc.gridy = 1;
+		gbc.anchor = GridBagConstraints.WEST;
+		gbc.fill = GridBagConstraints.HORIZONTAL;
+		gbc.insets = new Insets(5, 5, 5, 5);
+		_commentEntryPanel.add(_classificationCombo, gbc);
+		final JLabel label1 = new JLabel();
+		label1.setText("Classification:");
+		gbc = new GridBagConstraints();
+		gbc.gridx = 0;
+		gbc.gridy = 1;
+		gbc.anchor = GridBagConstraints.WEST;
+		_commentEntryPanel.add(label1, gbc);
+		final JScrollPane scrollPane1 = new JScrollPane();
+		gbc = new GridBagConstraints();
+		gbc.gridx = 0;
+		gbc.gridy = 0;
+		gbc.gridwidth = 4;
+		gbc.weightx = 1.0;
+		gbc.fill = GridBagConstraints.BOTH;
+		_commentEntryPanel.add(scrollPane1, gbc);
+		scrollPane1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
+		_commentBox = new JTextArea();
+		_commentBox.setRows(5);
+		_commentBox.setText("My comment");
+		scrollPane1.setViewportView(_commentBox);
+		_cancelLink = new LinkLabel();
+		_cancelLink.setText("cancel");
+		gbc = new GridBagConstraints();
+		gbc.gridx = 3;
+		gbc.gridy = 2;
+		_commentEntryPanel.add(_cancelLink, gbc);
+		final JPanel spacer2 = new JPanel();
+		gbc = new GridBagConstraints();
+		gbc.gridx = 2;
+		gbc.gridy = 1;
+		gbc.weightx = 1.0;
+		gbc.fill = GridBagConstraints.HORIZONTAL;
+		_commentEntryPanel.add(spacer2, gbc);
+		_cloudReportScrollPane = new JScrollPane();
+		gbc = new GridBagConstraints();
+		gbc.gridx = 0;
+		gbc.gridy = 2;
+		gbc.weightx = 1.0;
+		gbc.weighty = 1.0;
+		gbc.fill = GridBagConstraints.BOTH;
+		gbc.insets = new Insets(5, 5, 5, 5);
+		_mainPanel.add(_cloudReportScrollPane, gbc);
+		_cloudReportScrollPane.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), null));
+		_cloudReportPane = new JEditorPane();
+		_cloudReportPane.setContentType("text/html");
+		_cloudReportPane.setEditable(false);
+		_cloudReportPane.setText("<html>\r\n  <head>\r\n    \r\n  </head>\r\n  <body>\r\n  </body>\r\n</html>\r\n");
+		_cloudReportScrollPane.setViewportView(_cloudReportPane);
+		final JPanel panel1 = new JPanel();
+		panel1.setLayout(new GridBagLayout());
+		panel1.setBackground(new Color(-3355444));
+		gbc = new GridBagConstraints();
+		gbc.gridx = 0;
+		gbc.gridy = 0;
+		gbc.weightx = 1.0;
+		gbc.fill = GridBagConstraints.BOTH;
+		_mainPanel.add(panel1, gbc);
+		panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16751002)), null));
+		_titleLabel = new JLabel();
+		_titleLabel.setFont(new Font(_titleLabel.getFont().getName(), Font.BOLD, 14));
+		_titleLabel.setForeground(new Color(-16777216));
+		_titleLabel.setText("FindBugs Cloud - signed in");
+		gbc = new GridBagConstraints();
+		gbc.gridx = 0;
+		gbc.gridy = 0;
+		gbc.gridheight = 2;
+		gbc.weightx = 1.0;
+		gbc.anchor = GridBagConstraints.NORTHWEST;
+		panel1.add(_titleLabel, gbc);
+		_signInOutLink = new LinkLabel();
+		_signInOutLink.setText("sign out");
+		gbc = new GridBagConstraints();
+		gbc.gridx = 1;
+		gbc.gridy = 0;
+		gbc.anchor = GridBagConstraints.NORTHWEST;
+		panel1.add(_signInOutLink, gbc);
+		final JPanel panel2 = new JPanel();
+		panel2.setLayout(new GridBagLayout());
+		gbc = new GridBagConstraints();
+		gbc.gridx = 0;
+		gbc.gridy = 1;
+		gbc.weightx = 1.0;
+		gbc.fill = GridBagConstraints.BOTH;
+		gbc.insets = new Insets(5, 5, 5, 5);
+		_mainPanel.add(panel2, gbc);
+		_changeLink = new LinkLabel();
+		_changeLink.setText("change");
+		_changeLink.setToolTipText("Choose where comments are stored");
+		gbc = new GridBagConstraints();
+		gbc.gridx = 1;
+		gbc.gridy = 0;
+		gbc.anchor = GridBagConstraints.EAST;
+		panel2.add(_changeLink, gbc);
+		_cloudDetailsLabel = new JTextArea();
+		_cloudDetailsLabel.setEditable(false);
+		_cloudDetailsLabel.setFont(new Font(_cloudDetailsLabel.getFont().getName(), Font.ITALIC, 10));
+		_cloudDetailsLabel.setForeground(new Color(-10066330));
+		_cloudDetailsLabel.setLineWrap(true);
+		_cloudDetailsLabel.setMaximumSize(new Dimension(100, 50));
+		_cloudDetailsLabel.setMinimumSize(new Dimension(50, 16));
+		_cloudDetailsLabel.setOpaque(false);
+		_cloudDetailsLabel.setPreferredSize(new Dimension(100, 31));
+		_cloudDetailsLabel.setText("Comments are stored on the FindBugs Cloud at http://findbugs-cloud.appspot.com");
+		_cloudDetailsLabel.setWrapStyleWord(true);
+		gbc = new GridBagConstraints();
+		gbc.gridx = 0;
+		gbc.gridy = 0;
+		gbc.weightx = 1.0;
+		gbc.weighty = 1.0;
+		gbc.fill = GridBagConstraints.BOTH;
+		panel2.add(_cloudDetailsLabel, gbc);
+		label1.setLabelFor(_classificationCombo);
+	}
+
+	/**
+	 * @noinspection ALL
+	 */
+	public JComponent $$$getRootComponent$$$() {
+		return _mainPanel;
+	}
+}
Index: META-INF/plugin.xml
===================================================================
--- META-INF/plugin.xml	(revision 119)
+++ META-INF/plugin.xml	(revision )
@@ -229,7 +229,7 @@
         </group>
 
         <group id="FindBugs.AnalyzeMenu" text="FindBugs" popup="true">
-            <add-to-group anchor="last" group-id="ToolsMenu"/>
+            <add-to-group anchor="last" group-id="AnalyzeMenu"/>
         </group>
 
         <action id="FindBugs.SelectedFilesAction"
@@ -394,18 +394,20 @@
                     text="Group by package"
                     description="Group by package."
                     icon="/org/twodividedbyzero/idea/findbugs/resources/icons/actions/groupByPackage.png"/>
+<!--
 
             <action id="FindBugs.GroupByPriority"
                     class="org.twodividedbyzero.idea.findbugs.actions.GroupByPriority"
                     text="Group by priority"
                     description="Group by priority."
                     icon="/org/twodividedbyzero/idea/findbugs/resources/icons/actions/groupByPriority.png"/>
+-->
 
             <action id="FindBugs.GroupByRank"
                     class="org.twodividedbyzero.idea.findbugs.actions.GroupByRank"
                     text="Group by bug rank"
                     description="Group by bug rank."
-                    icon="/org/twodividedbyzero/idea/findbugs/resources/icons/actions/groupByRank.png"/>
+                    icon="/org/twodividedbyzero/idea/findbugs/resources/icons/actions/groupByPriority.png"/>
 
             <!-- <action id="FindBugs.GroupByFilter"
                class="org.twodividedbyzero.idea.findbugs.actions.GroupByFilter"
Index: src/impl/org/twodividedbyzero/idea/findbugs/tasks/FindBugsTask.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/tasks/FindBugsTask.java	(revision 115)
+++ src/impl/org/twodividedbyzero/idea/findbugs/tasks/FindBugsTask.java	(revision )
@@ -21,7 +21,8 @@
 import com.intellij.openapi.progress.ProgressIndicator;
 import com.intellij.openapi.project.Project;
 import edu.umd.cs.findbugs.FindBugs2;
-import edu.umd.cs.findbugs.IFindBugsEngine2;
+import edu.umd.cs.findbugs.IFindBugsEngine;
+import edu.umd.cs.findbugs.SortedBugCollection;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
 import org.twodividedbyzero.idea.findbugs.core.FindBugsPluginImpl;
@@ -41,14 +42,18 @@
 	private static final Logger LOGGER = Logger.getInstance(FindBugsTask.class.getName());
 
 	private ProgressIndicator _indicator;
-	private final IFindBugsEngine2 _engine;
-	private final boolean _startInBackground;
+	private IFindBugsEngine _engine;
+	private boolean _startInBackground;
+    private final SortedBugCollection _bugCollection;
 
 
-	public FindBugsTask(@Nullable final Project project, @NotNull final String title, final boolean canBeCancelled, final IFindBugsEngine2 engine, final boolean startInBackground) {
+	public FindBugsTask(@Nullable final Project project, SortedBugCollection bugCollection,
+						@NotNull final String title, final boolean canBeCancelled,
+						final IFindBugsEngine engine, final boolean startInBackground) {
 		super(project, title, canBeCancelled);
 		setCancelText("Cancel");
 		asBackgroundable();
+		_bugCollection = bugCollection;
 		_startInBackground = startInBackground;
 		_engine = engine;
 	}
@@ -93,7 +98,7 @@
 
 
 	@SuppressWarnings({"MethodMayBeStatic"})
-	public void runFindBugs(final IFindBugsEngine2 findBugs) {
+	public void runFindBugs(final IFindBugsEngine findBugs) {
 		// bug 1828973 was fixed by findbugs engine, so that workaround to start the
 		// analysis in an extra thread is not more needed
 		try {
@@ -114,6 +119,10 @@
 			//final Reporter bugReporter = (Reporter) findBugs.getBugReporter();
 			((FindBugs2) findBugs).dispose();
 		}
+
+        _bugCollection.setDoNotUseCloud(false);
+        _bugCollection.setTimestamp(System.currentTimeMillis());
+        _bugCollection.reinitializeCloud();
 	}
 
 
Index: src/impl/org/twodividedbyzero/idea/findbugs/inspection/FindBugsInspectionProvider.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/inspection/FindBugsInspectionProvider.java	(revision 115)
+++ src/impl/org/twodividedbyzero/idea/findbugs/inspection/FindBugsInspectionProvider.java	(revision )
@@ -17,10 +17,15 @@
 package org.twodividedbyzero.idea.findbugs.inspection;
 
 import com.intellij.codeInspection.InspectionToolProvider;
+import com.intellij.ide.plugins.IdeaPluginDescriptor;
+import com.intellij.openapi.application.Application;
+import com.intellij.openapi.application.ApplicationManager;
 import com.intellij.openapi.components.ApplicationComponent;
+import com.intellij.openapi.extensions.PluginId;
 import org.jetbrains.annotations.NonNls;
 import org.jetbrains.annotations.NotNull;
 
+import java.io.File;
 
 /**
  * $Date$
@@ -46,6 +51,10 @@
 
 	public void initComponent() {
 		// no action required
+		Application app = ApplicationManager.getApplication();
+		IdeaPluginDescriptor plugin = app.getPlugin(PluginId.getId("FindBugs-IDEA"));  //NON-NLS
+		File jar = new File(plugin.getPath(), "lib/webCloudClient.jar");  //NON-NLS
+		System.setProperty("findbugs.plugin.appengine", jar.toURI().toString());  //NON-NLS
 	}
 
 
Index: src/impl/org/twodividedbyzero/idea/findbugs/gui/tree/model/BugInstanceGroupNode.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/gui/tree/model/BugInstanceGroupNode.java	(revision 119)
+++ src/impl/org/twodividedbyzero/idea/findbugs/gui/tree/model/BugInstanceGroupNode.java	(revision )
@@ -1,6 +1,7 @@
 package org.twodividedbyzero.idea.findbugs.gui.tree.model;
 
 import edu.umd.cs.findbugs.BugInstance;
+import edu.umd.cs.findbugs.BugRankCategory;
 import org.jetbrains.annotations.Nullable;
 import org.twodividedbyzero.idea.findbugs.gui.tree.BugInstanceComparator;
 import org.twodividedbyzero.idea.findbugs.gui.tree.GroupBy;
@@ -305,7 +306,12 @@
 					return GuiResources.GROUP_BY_PRIORITY_EXP_ICON;
 				}
 			case BugRank:
-				return GuiResources.GROUP_BY_RANK_ICON;
+				final String rankString = BugRankCategory.getRank(getBugInstance().getBugRank()).toString();
+				if (GuiResources.GROUP_BY_RANK_ICONS.containsKey(rankString)) {
+					return GuiResources.GROUP_BY_RANK_ICONS.get(rankString);
+				} else {
+					return GuiResources.GROUP_BY_PRIORITY_ICON;
+				}
 			default:
 				return _collapsedIcon;
 		}
@@ -333,7 +339,12 @@
 					return GuiResources.GROUP_BY_PRIORITY_EXP_ICON;
 				}
 			case BugRank:
-				return GuiResources.GROUP_BY_RANK_ICON;
+				final String rankString = BugRankCategory.getRank(getBugInstance().getBugRank()).toString();
+				if (GuiResources.GROUP_BY_RANK_ICONS.containsKey(rankString)) {
+					return GuiResources.GROUP_BY_RANK_ICONS.get(rankString);
+				} else {
+					return GuiResources.GROUP_BY_PRIORITY_ICON;
+				}
 			default:
 				return _expandedIcon;
 		}
Index: src/impl/org/twodividedbyzero/idea/findbugs/preferences/FindBugsPreferences.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/preferences/FindBugsPreferences.java	(revision 115)
+++ src/impl/org/twodividedbyzero/idea/findbugs/preferences/FindBugsPreferences.java	(revision )
@@ -266,7 +266,7 @@
 
 
 	private void applyDetectors() {
-		final DetectorFactoryCollection detectorFactoryCollection = FindBugsPreferences.getDetectorFactorCollection();
+		final DetectorFactoryCollection detectorFactoryCollection = FindBugsPreferences.getDetectorFactoryCollection();
 
 		final Iterator<DetectorFactory> iterator = detectorFactoryCollection.factoryIterator();
 		while (iterator.hasNext()) {
@@ -303,8 +303,8 @@
 			}
 
 			try {
-				getDetectorFactorCollection().setPluginList(result);
-				getDetectorFactorCollection().ensureLoaded();
+				getDetectorFactoryCollection().setPluginList(result);
+				getDetectorFactoryCollection().ensureLoaded();
 			} catch (IllegalStateException e) {
 				throw new FindBugsPluginException("Plugin needs to be set first before DetectorFactoryCollection instance is created.", e);
 			}
@@ -337,7 +337,7 @@
 		_plugins.clear();
 		//noinspection AssignmentToCollectionOrArrayFieldFromParameter
 		_plugins = plugins;
-		//loadPlugins(_plugins);
+		loadPlugins(_plugins);
 	}
 
 
@@ -588,7 +588,7 @@
 	public static Map<String, String> getAvailableDetectors(final UserPreferences userPrefs) {
 		final Map<String, String> detectorsAvailableList = new HashMap<String, String>();
 		//final Map<DetectorFactory, String> factoriesToBugAbbrev = new HashMap<DetectorFactory, String>();
-		final Iterator<DetectorFactory> iterator = FindBugsPreferences.getDetectorFactorCollection().factoryIterator();
+		final Iterator<DetectorFactory> iterator = FindBugsPreferences.getDetectorFactoryCollection().factoryIterator();
 		while (iterator.hasNext()) {
 			final DetectorFactory factory = iterator.next();
 
@@ -604,7 +604,7 @@
 	}
 
 
-	public static synchronized DetectorFactoryCollection getDetectorFactorCollection() {
+	public static synchronized DetectorFactoryCollection getDetectorFactoryCollection() {
 		if (_detectorFactoryCollection == null) {
 			_detectorFactoryCollection = DetectorFactoryCollection.rawInstance();
 		}
Index: src/impl/org/twodividedbyzero/idea/findbugs/gui/PluginGuiCallback.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/gui/PluginGuiCallback.java	(revision )
+++ src/impl/org/twodividedbyzero/idea/findbugs/gui/PluginGuiCallback.java	(revision )
@@ -0,0 +1,110 @@
+/*
+ * Copyright 2010 Andre Pfeiler
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *  http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.twodividedbyzero.idea.findbugs.gui;
+
+import com.intellij.openapi.progress.ProgressIndicator;
+import com.intellij.openapi.progress.Task.Backgroundable;
+import com.intellij.openapi.wm.StatusBar;
+import com.intellij.openapi.wm.WindowManager;
+import edu.umd.cs.findbugs.BugCollection;
+import edu.umd.cs.findbugs.BugInstance;
+import edu.umd.cs.findbugs.cloud.Cloud;
+import edu.umd.cs.findbugs.cloud.Cloud.CloudListener;
+import edu.umd.cs.findbugs.cloud.Cloud.CloudTask;
+import edu.umd.cs.findbugs.cloud.Cloud.CloudTaskListener;
+import edu.umd.cs.findbugs.gui2.AbstractSwingGuiCallback;
+import org.jetbrains.annotations.NotNull;
+import org.twodividedbyzero.idea.findbugs.core.FindBugsPlugin;
+
+import java.awt.EventQueue;
+import java.util.concurrent.CountDownLatch;
+
+public class PluginGuiCallback extends AbstractSwingGuiCallback {
+    private final FindBugsPlugin plugin;
+    private Cloud cloud;
+
+    private CloudListener cloudListener = new CloudListener() {
+        public void issueUpdated(BugInstance bug) {
+            plugin.getToolWindowPanel().getBugDetailsComponents().issueUpdated(bug);
+        }
+
+        public void statusUpdated() {
+			StatusBar sb = WindowManager.getInstance().getStatusBar(plugin.getProject());
+			if (sb != null && cloud != null)
+				sb.setInfo(cloud.getStatusMsg());
+        }
+
+        public void taskStarted(final CloudTask task) {
+            task.setUseDefaultListener(false);
+            final Backgroundable backgroundable = new Backgroundable(plugin.getProject(), task.getName(), false) {
+
+                @Override
+                public void run(@NotNull final ProgressIndicator progressIndicator) {
+                    try {
+                        final CountDownLatch latch = new CountDownLatch(1);
+                        task.addListener(new CloudTaskListener() {
+                            public void taskStatusUpdated(String statusLine, double percentCompleted) {
+                                progressIndicator.setText(statusLine);
+                                progressIndicator.setFraction(percentCompleted / 100.0);
+                            }
+
+                            public void taskFinished() {
+                                latch.countDown();
+                            }
+
+                            public void taskFailed(String message) {
+                                progressIndicator.setText(message);
+                                latch.countDown();
+                            }
+                        });
+                        if (!task.isFinished())
+                            latch.await();
+                    } catch (InterruptedException e) {
+                        throw new IllegalStateException(e);
+                    }
+                }
+            };
+            EventQueue.invokeLater(new Runnable() {
+                public void run() {
+                    backgroundable.queue();
+                }
+            });
+        }
+    };
+
+    public PluginGuiCallback(FindBugsPlugin plugin) {
+        super(plugin.getToolWindowPanel());
+        this.plugin = plugin;
+    }
+
+    public void setErrorMessage(String errorMsg) {
+    }
+
+    public void registerCloud(final edu.umd.cs.findbugs.Project project, BugCollection collection, final Cloud cloud) {
+        this.cloud = cloud;
+        cloud.addListener(cloudListener);
+    }
+
+    public void unregisterCloud(edu.umd.cs.findbugs.Project project, BugCollection collection, Cloud cloud) {
+        //noinspection ObjectEquality
+        if (cloud == this.cloud) {
+            //noinspection AssignmentToNull
+            this.cloud = null;
+            cloud.removeListener(cloudListener);
+        }
+    }
+}
Index: src/impl/org/twodividedbyzero/idea/findbugs/gui/tree/BugInstanceComparator.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/gui/tree/BugInstanceComparator.java	(revision 113)
+++ src/impl/org/twodividedbyzero/idea/findbugs/gui/tree/BugInstanceComparator.java	(revision )
@@ -18,6 +18,7 @@
 
 import edu.umd.cs.findbugs.BugInstance;
 import edu.umd.cs.findbugs.BugPattern;
+import edu.umd.cs.findbugs.BugRankCategory;
 
 import java.io.Serializable;
 import java.util.ArrayList;
@@ -198,17 +199,10 @@
 
 		private static final long serialVersionUID = 0L;
 
-
 		public int compare(final BugInstance lhs, final BugInstance rhs) {
-			return getBugRank(lhs).compareTo(getBugRank(rhs));
+			return BugRankCategory.getRank(lhs.getBugRank()).compareTo(BugRankCategory.getRank(rhs.getBugRank()));
 		}
-
-
-		@SuppressWarnings({"MethodMayBeStatic"})
-		public Integer getBugRank(final BugInstance bugInstance) {
-			return bugInstance.getBugRank();
-		}
+	}
-	}
 
 	/** The instance of BugInstancePriorityComparator. */
 	public static final Comparator<BugInstance> _bugInstanceBugRankComparator = new BugInstanceBugRankComparator();
Index: src/impl/org/twodividedbyzero/idea/findbugs/gui/toolwindow/view/BugTreePanel.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/gui/toolwindow/view/BugTreePanel.java	(revision 113)
+++ src/impl/org/twodividedbyzero/idea/findbugs/gui/toolwindow/view/BugTreePanel.java	(revision )
@@ -90,6 +90,7 @@
 	private double _splitPaneVerticalWeight = 1.0;
 	private final double _splitPaneHorizontalWeight = 0.4;
 	private boolean _bugPreviewEnabled;
+	private final Object addNodeLock = new Object();
 
 
 	public BugTreePanel(final ToolWindowPanel parent, final Project project) {
@@ -112,19 +113,21 @@
 	}
 
 
-	synchronized void addNode(final BugInstance bugInstance) {
+	void addNode(final BugInstance bugInstance) {
+		synchronized(addNodeLock) {
-		if (bugInstance == null) {
-			return;
-		}
-		/*if(isHiddenBugGroup(bugInstance)) {
-			return;
-		}*/
+			if (bugInstance == null) {
+				return;
+			}
+			/*if(isHiddenBugGroup(bugInstance)) {
+				return;
+			}*/
 
-		if (_treeModel.getGroupBy() != _groupBy) {
-			_treeModel.setGroupBy(_groupBy);
-		}
+			if (_treeModel.getGroupBy() != _groupBy) {
+				_treeModel.setGroupBy(_groupBy);
+			}
 
-		_treeModel.addNode(bugInstance);
+			_treeModel.addNode(bugInstance);
+		}
 
 	}
 
@@ -303,7 +306,7 @@
 			final BugInstance bugInstance = bugNode.getBugInstance();
 
 			if (_parent != null) {
-				_parent.getBugDetailsComponents().setBugExplanation(bugInstance);
+				_parent.getBugDetailsComponents().setBugExplanation(_bugCollection, bugInstance);
 			}
 		}
 	}
Index: src/impl/org/twodividedbyzero/idea/findbugs/gui/tree/GroupBy.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/gui/tree/GroupBy.java	(revision 115)
+++ src/impl/org/twodividedbyzero/idea/findbugs/gui/tree/GroupBy.java	(revision )
@@ -1,6 +1,7 @@
 package org.twodividedbyzero.idea.findbugs.gui.tree;
 
 import edu.umd.cs.findbugs.BugInstance;
+import edu.umd.cs.findbugs.BugRankCategory;
 import edu.umd.cs.findbugs.I18N;
 import org.twodividedbyzero.idea.findbugs.gui.tree.BugInstanceComparator.BugInstanceBugRankComparator;
 import org.twodividedbyzero.idea.findbugs.gui.tree.BugInstanceComparator.BugInstanceCategoryComparator;
@@ -98,7 +99,7 @@
 				break;
 			case BugRank:
 				final BugInstanceBugRankComparator bugRankComparator = (BugInstanceBugRankComparator) BugInstanceComparator.getBugInstanceBugRankComparator();
-				groupName = String.valueOf(bugRankComparator.getBugRank(bugInstance));
+				groupName = BugRankCategory.getRank(bugInstance.getBugRank()).name();
 				break;
 			default:
 				throw new IllegalStateException("Unknown group order: " + groupBy);
Index: src/impl/org/twodividedbyzero/idea/findbugs/gui/toolwindow/view/BugDetailsComponents.java
===================================================================
--- src/impl/org/twodividedbyzero/idea/findbugs/gui/toolwindow/view/BugDetailsComponents.java	(revision 113)
+++ src/impl/org/twodividedbyzero/idea/findbugs/gui/toolwindow/view/BugDetailsComponents.java	(revision )
@@ -1,18 +1,17 @@
-/**
- * Copyright 2008 Andre Pfeiler
+/*
+ * Copyright 2010 Andre Pfeiler
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *   http://www.apache.org/licenses/LICENSE-2.0
+ *  http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
- *
  */
 package org.twodividedbyzero.idea.findbugs.gui.toolwindow.view;
 
@@ -22,6 +21,7 @@
 import edu.umd.cs.findbugs.DetectorFactory;
 import edu.umd.cs.findbugs.FieldAnnotation;
 import edu.umd.cs.findbugs.MethodAnnotation;
+import edu.umd.cs.findbugs.SortedBugCollection;
 import org.twodividedbyzero.idea.findbugs.common.ui.EventDispatchThreadHelper;
 import org.twodividedbyzero.idea.findbugs.common.util.BugInstanceUtil;
 import org.twodividedbyzero.idea.findbugs.gui.preferences.DetectorConfiguration;
@@ -38,7 +38,6 @@
 import javax.swing.tree.TreePath;
 import java.awt.BorderLayout;
 import java.awt.Color;
-import java.awt.Component;
 import java.awt.Dimension;
 import java.awt.Graphics;
 import java.awt.Graphics2D;
@@ -65,13 +64,17 @@
 	private JEditorPane _explanationPane;
 	private JPanel _bugDetailsPanel;
 	private JPanel _explanationPanel;
-	private final Component _parent;
+	private final ToolWindowPanel _parent;
 	private TreePath _currentTreePath;
 	private double _splitPaneHorizontalWeight = 0.6;
+	private CloudCommentsPane _cloudCommentsPane;
+	private JPanel _cloudCommentsPanel;
+    private SortedBugCollection _lastBugCollection;
+    private BugInstance _lastBugInstance;
 
 
-	public BugDetailsComponents(final Component parent) {
-		_parent = parent;
+	public BugDetailsComponents(final ToolWindowPanel toolWindowPanel) {
+		_parent = toolWindowPanel;
 		init();
 	}
 
@@ -81,7 +84,31 @@
 		setStyleSheets();
 	}
 
+	public JPanel getCloudCommentsPanel() {
+		if (_cloudCommentsPanel == null) {
+			final JScrollPane detailHtmlScoller = new JScrollPane(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
+			detailHtmlScoller.setViewportView(getCloudCommentsPane());
 
+			_cloudCommentsPanel = new JPanel();
+			_cloudCommentsPanel.setLayout(new BorderLayout());
+			//_explanationPanel.setMinimumSize(new Dimension((int) (_parent.getPreferredSize().width * 0.6), 100));
+			//_explanationPanel.setPreferredSize(new Dimension((int) (_parent.getPreferredSize().width * 0.6), 150));
+			_cloudCommentsPanel.add(detailHtmlScoller, BorderLayout.CENTER);
+		}
+
+		return _cloudCommentsPanel;
+	}
+
+	private CloudCommentsPane getCloudCommentsPane() {
+		if (_cloudCommentsPane == null) {
+			_cloudCommentsPane = new CloudCommentsPane(_parent);
+			_cloudCommentsPane.setBorder(new EmptyBorder(10, 10, 10, 10));
+			//_explanationPane.setPreferredSize(new Dimension(_parent.getPreferredSize().width, 150));
+		}
+
+		return _cloudCommentsPane;
+	}
+
 	public JPanel getBugDetailsPanel() {
 		if (_bugDetailsPanel == null) {
 			final JScrollPane detailTextScoller = new JScrollPane(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
@@ -301,8 +328,23 @@
 	}
 
 
-	public void setBugExplanation(final BugInstance bugInstance) {
-		final String html = BugInstanceUtil.getDetailHtml(bugInstance);
+	public void setBugExplanation(final SortedBugCollection bugCollection, final BugInstance bugInstance) {
+		this._lastBugCollection = bugCollection;
+		this._lastBugInstance = bugInstance;
+		refreshDetailsShown();
+
+		scrollRectToVisible(_bugDetailsPane);
+	}
+
+    public void issueUpdated(BugInstance bug) {
+        //noinspection ObjectEquality
+        if (bug == _lastBugInstance) {
+            refreshDetailsShown();
+		}
+	}
+
+	private void refreshDetailsShown() {
+		final String html = BugInstanceUtil.getDetailHtml(_lastBugInstance);
 		final StringReader reader = new StringReader(html); // no need for BufferedReader
 		try {
 			_explanationPane.setToolTipText(edu.umd.cs.findbugs.L10N.getLocalString("tooltip.longer_description", "This gives a longer description of the detected bug pattern"));
@@ -314,7 +356,8 @@
 			reader.close(); // polite, but doesn't do much in StringReader
 		}
 
-		scrollRectToVisible(_bugDetailsPane);
+//		scrollRectToVisible(_bugDetailsPane);
+		_cloudCommentsPane.setBugInstance(_lastBugCollection, _lastBugInstance);
 	}
 
 
